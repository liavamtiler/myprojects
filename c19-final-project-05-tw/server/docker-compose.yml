version: '3'

services:
    management:
        environment: 
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: management
            POSTGRES_HOST: 172.1.0.13
            NODE_ENV: production
            PORT: 8080
        restart: always
        depends_on: 
            - postgres
        build:
            context: ./
            dockerfile: ./Dockerfile
        image: "c19-final-server:latest"
        ports:
            - "8080:8080"
            - "8090:8090"
        networks:
            project:
                ipv4_address: 172.1.0.10
    
    prometheus:
        image: bitnami/prometheus:latest
        volumes:
            - ./prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
        ports:
            - 9090:9090
        depends_on:
            - management
        networks:
            project:
                ipv4_address: 172.1.0.11

    grafana:
        image: grafana/grafana
        environment:
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        volumes:
            - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
        ports:
            - 5000:3000
        depends_on:
            - prometheus
        networks:
            project:
                ipv4_address: 172.1.0.12
    
    postgres:
        image: "postgres:13"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: management
        restart: always
        ports:
            - "5432:5432"
        volumes:
            - ./pgdata:/var/lib/postgresql/data
        networks:
            project:
                ipv4_address: 172.1.0.13


networks:
  project:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.1.0.0/24
